# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-liquibase-action:
    runs-on: ubuntu-latest
    name: Test Liquibase Action
    steps:
      - uses: actions/checkout@v2
      - uses:  liquibase-github-actions/update@v4.29.0
        with:
          # The root changelog
          # string
          # Required
          changeLogFile: 'changelogs/postgre.sql'
      
          # The JDBC database connection URL
          # string
          # Required
          url: "jdbc:postgresql://flora.db.elephantsql.com/beqnptlr"
      
          # Fully-qualified class which specifies a ChangeExecListener
          # string
          # Optional
          #changeExecListenerClass: ""
      
          # Path to a properties file for the ChangeExecListenerClass
          # string
          # Optional
          #changeExecListenerPropertiesFile: ""
      
          # Changeset contexts to match
          # string
          # Optional
          #contextFilter: ""
      
          # The default catalog name to use for the database connection
          # string
          # Optional
          #defaultCatalogName: "beqnptlr"
      
          # The default schema name to use for the database connection
          # string
          # Optional
          #defaultSchemaName: "beqnptlr"
      
          # The JDBC driver class
          # string
          # Optional
          driver: "org.postgresql.Driver"
      
          # The JDBC driver properties file
          # string
          # Optional
          #driverPropertiesFile: ""
      
          # Changeset labels to match
          # string
          # Optional
          #labelFilter: ""
      
          # Control whether names of objects in the default catalog are fully qualified or not. If true they are. If false, only objects outside the default catalog are fully qualified
          # bool
          # Optional
          #outputDefaultCatalog: ""
      
          # Control whether names of objects in the default schema are fully qualified or not. If true they are. If false, only objects outside the default schema are fully qualified
          # bool
          # Optional
          #outputDefaultSchema: ""
      
          # Password to use to connect to the database
          # string
          # Optional
          password: ${{ secrets.PASSWORD }}
      
          # Username to use to connect to the database
          # string
          # Optional
          username: ${{ secrets.USERNAME }}

          logLevel: FINE
